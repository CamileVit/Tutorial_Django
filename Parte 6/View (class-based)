from django.views import generic
from .models import Book  # Importa o modelo Book do aplicativo

# Definição de uma visualização baseada em classe para listar livros
class BookListView(generic.ListView):
    model = Book  # Define o modelo a ser usado pela visualização (Book)

    # Atributos opcionais para personalizar o comportamento da visualização
    context_object_name = 'my_book_list'  # Nome da variável de template para a lista de livros
    queryset = Book.objects.filter(title__icontains='war')[:5]  # Filtra 5 livros com o título contendo 'war'
    template_name = 'catalog/book_list.html'  # Nome do template a ser usado

    # Substituição do método get_queryset() para personalizar a lista de registros retornados
    def get_queryset(self):
        return Book.objects.filter(title__icontains='war')[:5]  # Filtra 5 livros com o título contendo 'war'

    # Substituição do método get_context_data() para adicionar variáveis de contexto adicionais
    def get_context_data(self, **kwargs):
        # Chama a implementação básica para obter o contexto padrão
        context = super(BookListView, self).get_context_data(**kwargs)
        # Adiciona uma variável chamada 'some_data' ao contexto
        context['some_data'] = 'This is just some data'
        return context
